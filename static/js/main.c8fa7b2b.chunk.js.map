{"version":3,"sources":["utils/consts.ts","utils/utils.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["timeData","arrivalValueMon","departureValueMon","arrivalValueTue","departureValueTue","arrivalValueWed","departureValueWed","arrivalValueThu","departureValueThu","arrivalValueFri","departureValueFri","getTimeDifference","arrivalTime","departureTime","getDate","string","Date","Number","split","getTime","App","useState","data","setData","amount","setAmount","ratePerHour","setRatePerHour","handleTimeInputChange","e","target","name","value","className","onSubmit","preventDefault","amountOnHand","reduce","prevValue","currValue","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8fa7b2b.chunk.js","sourcesContent":["export const msPerMin = 60000;\r\nexport const minPerHour = 60;\r\nexport const timeData = {\r\n  arrivalValueMon: '00:00',\r\n  departureValueMon: '00:00',\r\n  arrivalValueTue: '00:00',\r\n  departureValueTue: '00:00',\r\n  arrivalValueWed: '00:00',\r\n  departureValueWed: '00:00',\r\n  arrivalValueThu: '00:00',\r\n  departureValueThu: '00:00',\r\n  arrivalValueFri: '00:00',\r\n  departureValueFri: '00:00'\r\n}","import { msPerMin } from \"./consts\"\r\n\r\nexport default function getTimeDifference(arrivalTime: string, departureTime: string): number {\r\n  const getDate = (string: string) => new Date(2021, 0, 1, Number(string.split(':')[0]), Number(string.split(':')[1]))\r\n  return (getDate(departureTime).getTime() - getDate(arrivalTime).getTime()) / msPerMin\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { timeData, minPerHour } from '../utils/consts';\nimport getTimeDifference from '../utils/utils';\nimport { ITimeData } from '../utils/interfaces';\n\nfunction App() {\n  const [data, setData] = useState(timeData)\n  const [amount, setAmount] = useState(0);\n  const [ratePerHour, setRatePerHour] = useState(0);\n\n  const handleTimeInputChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target as HTMLInputElement\n    setData((data: ITimeData) => {\n      return {\n        ...data, \n        [name]: value\n      }\n    })\n  }\n\n  const handleRateInputChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { value } = e.target as HTMLInputElement\n    setRatePerHour(Number(value))\n  }\n\n  const handleBtnSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    const {\n      arrivalValueMon, \n      arrivalValueThu, \n      arrivalValueWed, \n      arrivalValueTue, \n      arrivalValueFri,\n      departureValueMon,\n      departureValueThu,\n      departureValueWed,\n      departureValueTue,\n      departureValueFri\n    } = data\n\n    const times = [\n      getTimeDifference(arrivalValueMon, departureValueMon), \n      getTimeDifference(arrivalValueThu, departureValueThu),\n      getTimeDifference(arrivalValueWed, departureValueWed),\n      getTimeDifference(arrivalValueTue, departureValueTue),\n      getTimeDifference(arrivalValueFri, departureValueFri)\n    ]\n\n    const amountOnHand = (times.reduce((prevValue, currValue) => prevValue + currValue)) * ratePerHour / minPerHour \n    setAmount(amountOnHand)\n    setData(timeData)\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleBtnSubmit}>\n        <fieldset>\n          <legend>ставка за час</legend>\n          <input type=\"text\" value={ratePerHour} onChange={handleRateInputChange} />\n        </fieldset>\n        <fieldset>\n          <legend>пн</legend>\n          <input type=\"time\" name=\"arrivalValueMon\" value={data.arrivalValueMon} onChange={handleTimeInputChange} />\n          <input type=\"time\" name=\"departureValueMon\" value={data.departureValueMon} onChange={handleTimeInputChange} />\n        </fieldset>\n        <fieldset>\n          <legend>вт</legend>\n          <input type=\"time\" name=\"arrivalValueTue\" value={data.arrivalValueTue} onChange={handleTimeInputChange} />\n          <input type=\"time\" name=\"departureValueTue\" value={data.departureValueTue} onChange={handleTimeInputChange} />\n        </fieldset>\n        <fieldset>\n          <legend>ср</legend>\n          <input type=\"time\" name=\"arrivalValueWed\" value={data.arrivalValueWed} onChange={handleTimeInputChange} />\n          <input type=\"time\" name=\"departureValueWed\" value={data.departureValueWed} onChange={handleTimeInputChange} />\n        </fieldset>\n        <fieldset>\n          <legend>чт</legend>\n          <input type=\"time\" name=\"arrivalValueThu\" value={data.arrivalValueThu} onChange={handleTimeInputChange} />\n          <input type=\"time\" name=\"departureValueThu\" value={data.departureValueThu} onChange={handleTimeInputChange} />\n        </fieldset>\n        <fieldset>\n          <legend>пт</legend>\n          <input type=\"time\" name=\"arrivalValueFri\" value={data.arrivalValueFri} onChange={handleTimeInputChange} />\n          <input type=\"time\" name=\"departureValueFri\" value={data.departureValueFri} onChange={handleTimeInputChange} />\n        </fieldset>\n        <button type=\"submit\">Посчитать</button>\n      </form>\n      <div className=\"output\">{amount}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}